{"version":3,"sources":["components/Song.js","components/Player.js","components/utils.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","image","alt","name","artist","Player","setSongs","setCurrentSong","songs","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","getTime","time","Math","floor","slice","skipTrackhandler","direction","a","currentIndex","findIndex","song","id","length","activePlayerhandler","current","play","nextpreve","newSong","map","s","active","currentTime","onChange","e","target","value","min","max","duration","type","size","icon","faChevronLeft","onClick","pause","faPause","faPlay","faChevronRight","Chillhop","audio","color","uuidv4","LibrarySong","selectedSongHandler","selectedSong","Library","isOpenLibrary","Nav","setIsOpenLibrary","faMusic","App","useState","data","useRef","timUpdatehandler","audioEndedHandler","onEnded","onLoadedMetadata","onTimeUpdate","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d003b0.chunk.js","sourcesContent":["import React from 'react';\nconst Song=({currentSong})=>{\n    return (\n        <div className=\"song\">\n            <img src={currentSong.image} alt={currentSong.name} />\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n\n        </div>\n    );\n};\nexport default Song;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay,faPause, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nconst Player=({setSongs,setCurrentSong,songs,currentSong,isPlaying,setIsPlaying, audioRef,songInfo, setSongInfo})=>{\n  \n    const audioPlayhandler=()=>{\n        if(isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n    //state\n  \n    const getTime=(time)=>{\n        return (\n            Math.floor(time/60)+\":\"+(\"0\"+Math.floor(time%60)).slice(-2)\n        );\n    }\n    const dragHandler=(e)=>{\n        audioRef.current.currentTime=e.target.value;\n        setSongInfo({...songInfo, currentTime:e.target.value})\n    }\n    const skipTrackhandler=async (direction)=>{\n        const currentIndex=songs.findIndex((song)=>song.id===currentSong.id)\n        if(direction==='skip-forward'){\n           await setCurrentSong(songs[(currentIndex+1)%songs.length]);\n           activePlayerhandler(songs[(currentIndex+1)%songs.length])\n        }else if(direction==='skip-back'){\n            if(((currentIndex-1)%songs.length)===-1){\n                setCurrentSong(songs[(songs.length-1)]);\n                if(isPlaying)audioRef.current.play();\n                activePlayerhandler(songs[(songs.length-1)]);\n                return;\n            }\n          await  setCurrentSong(songs[(currentIndex-1)%songs.length]);\n          activePlayerhandler(songs[(currentIndex-1)%songs.length])\n        }\n        if(isPlaying)audioRef.current.play();\n    };\n    const activePlayerhandler=(nextpreve)=>{\n        const newSong=songs.map(s=>{\n            if(s.id===nextpreve.id){\n                return{\n                    ...s,\n                    active:true}\n            }else{\n                return{\n                    ...s,\n                    active:false\n                }\n            }\n        }) \n        setSongs(newSong);\n    }\n  \n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <div>{getTime(songInfo.currentTime)}</div>\n                <input onChange={dragHandler} min=\"0\" max={getTime(songInfo.duration)||0}value={songInfo.currentTime} type=\"range\" />\n                <div>{songInfo.duration?getTime(songInfo.duration):\"0:00\"}</div>\n            </div>\n            <div className=\"player-control\">\n                <FontAwesomeIcon size=\"2x\" icon={faChevronLeft} onClick={()=>skipTrackhandler('skip-back')} />\n                <FontAwesomeIcon onClick={audioPlayhandler} size=\"2x\" icon={isPlaying?faPause:faPlay} />\n                <FontAwesomeIcon size=\"2x\" icon={faChevronRight} onClick={()=>skipTrackhandler('skip-forward')} />\n            </div>\n     \n\n        </div>\n    );\n};\nexport default Player;","import { v4 as uuidv4 } from 'uuid';\nconst Chillhop=()=>{\n    return(\n        [\n            {\n                name:\"Bliss (A Felicidade)\",\n                artist:\"Misha, Jussi Halme\",\n                image:\"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7-1024x1024.jpg\",\n                audio:\"https://mp3.chillhop.com/serve.php/?mp3=17933\",\n                color:['#EE7E78','#292F47'],\n                id:uuidv4(),\n                active:true\n            },\n            \n            {\n                name:\"greatefull\",\n                artist:\"Jussi Halme\",\n                image:\"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7-1024x1024.jpg\",\n                audio:\"https://mp3.chillhop.com/serve.php/?mp3=19058\",\n                color:['#EE7E78','#292F47'],\n                id:uuidv4(),\n                active:false\n            },\n            {\n                name:\"Kinship\",\n                artist:\"Sleepy Fish, mommy\",\n                image:\"https://chillhop.com/wp-content/uploads/2021/05/1245c0271290a3196328c0cf4aaa910cd873dfe7-1024x1024.jpg\",\n                audio:\"https://mp3.chillhop.com/serve.php/?mp3=17931\",\n                color:['#EE7E78','#292F47'],\n                id:uuidv4(),\n                active:false\n            },\n            \n        ]\n    );\n};\nexport default Chillhop;","import React from 'react';\nconst LibrarySong=({song, songs, setCurrentSong, audioRef, isPlaying, setSongs})=>{\n    const selectedSongHandler= async ()=>{\n//  const selectedSong=songs.filter(state=>state.id===id);\n//     setCurrentSong(selectedSong[0]);\nconst newSong=songs.map(s=>{\n    if(s.id===song.id){\n        return{\n            ...s,\n            active:true}\n    }else{\n        return{\n            ...s,\n            active:false\n        }\n    }\n}) \nawait setSongs(newSong);\n        const selectedSong = song;\n        await setCurrentSong(selectedSong);\n        if(isPlaying)audioRef.current.play();\n    };\n\n   \n    return (\n        <div onClick={selectedSongHandler} className={`library-song ${song.active?\"selected\":''}`}>\n            <img src={song.image} alt={song.name} />\n            <div className=\"song-description\">\n            <h3>{song.name}</h3>\n            <h4>{song.artist}</h4>\n            </div>\n        </div>\n    );\n};\nexport default LibrarySong;","import React from 'react';\nimport LibrarySong from './LibrarySong';\n\nconst Library=({songs, setCurrentSong, audioRef, isPlaying, setSongs, isOpenLibrary})=>{\n    return(\n        <div className={`library ${isOpenLibrary?'library-active':''}`}>\n            <h2>Library</h2>\n            {songs.map((song)=><LibrarySong setSongs={setSongs} isPlaying={isPlaying}  audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} key={song.id} id={song.id} song={song} />)}\n            \n\n        </div>\n    );\n}\nexport default Library;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\nconst Nav=({isOpenLibrary,setIsOpenLibrary})=>{\n    const libraryHandler=()=>{\n        return(\n    setIsOpenLibrary(!isOpenLibrary)\n    );\n    };\n    return(\n        <div className=\"nav-main\">\n            <div className=\"nav-container\">\n            <h1>Waves</h1>\n            <button onClick={libraryHandler}>Library \n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n            </div>\n        </div>\n    );\n};\nexport default Nav;","import React, {useState, useRef} from 'react';\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport data from './components/utils';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\nfunction App() {\n  //state\n  const [songs, setSongs]=useState(data());\n  const [currentSong, setCurrentSong]=useState(songs[0]);\n  const [isPlaying, setIsPlaying]=useState(false);\n  const audioRef= useRef(null);\n  const [songInfo, setSongInfo]=useState({\n    currentTime:0,\n    duration:0\n});\nconst [isOpenLibrary, setIsOpenLibrary]=useState(false);\nconst timUpdatehandler=(e)=>{\n    const current =e.target.currentTime;\n    const duration=e.target.duration;\n    setSongInfo({...songInfo,currentTime:current,duration})\n};\n//audio ende handler\nconst audioEndedHandler=async ()=>{\n  const currentIndex=songs.findIndex((song)=>song.id===currentSong.id);\n     await setCurrentSong(songs[(currentIndex+1)%songs.length]);\n     if(isPlaying)audioRef.current.play();\n};\n  return (\n    <div className={`App ${isOpenLibrary?'library--active':''}`}>\n      <Nav setIsOpenLibrary={setIsOpenLibrary} isOpenLibrary={isOpenLibrary} />\n      <Song currentSong={currentSong} />\n      <Player setSongs={setSongs} setCurrentSong={setCurrentSong} songs={songs} songInfo={songInfo} setSongInfo={setSongInfo} audioRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={currentSong} />\n      <Library isOpenLibrary={isOpenLibrary}  setIsOpenLibrary={setIsOpenLibrary} setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} setCurrentSong={setCurrentSong} songs={songs} />\n      <audio onEnded={audioEndedHandler} onLoadedMetadata={timUpdatehandler} onTimeUpdate={timUpdatehandler} ref={audioRef} src={currentSong.audio}></audio>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/style.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}